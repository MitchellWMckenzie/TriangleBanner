/***************
 Copyright 2017 Mitchell Woodhouse Mckenzie
 Created By: Mitchell Woodhouse Mckenzie
 Website: www.woodhousemckenzie.com
 Date: 04/27/2017
 ***************/
function Random(min,max){return Math.floor((Math.random()*(max-min))+min)}
function Node(x,y,color){this.x=x;this.y=y;this.color=color;this.anim=0;this.anim2=0;this.animCount=0;this.animCount2=0;this.animating=!1;this.alpha=1}
function TriangleBanner(id){var programmableCanvas;var canvasContext;var width,height;var nodePoints=[];var minNodeWidth,maxNodeWidth,minNodeHeight,maxNodeHeight;var maxAllowed=0;var nodeCount;var animationStyle=0;var animationSpeed,animationColors=[];var hasStarted=!1;var currentAmountX=0;var currentAmountY=0;var goToAmountX=0;var goToAmountY=0;var nodeModifiedCount=1;var currentWaveMain;var allowNext;var maxPeak;var speed=0.15;var currentColor=0;var resizeOnResize=!1;var resizeTimer=null;var animationInterval;var colorsToUse=[];var splitColorsFromPassedIn=function(colorsToSplit){var returnArray=[];var split=colorsToSplit.split("-");for(var x=0;x<split.length;x++){switch(split[x]){case "blue":returnArray.push("#0a3f6f","#0b477d","#0D4F8B","#3d72a2","#256096");break;case "red":returnArray.push("#cc1e1e","#e52222","#ff2626","#ff3b3b","#ff5151");break;case "purple":returnArray.push("#240643","#29074b","#2E0854","#422065","#573976");break;case "green":returnArray.push("#3c8c40","#449d48","#4CAF50","#5db761","#6fbf72");break;case "yellow":returnArray.push("#ccab00","#e5c000","#FFD600","#ffde32","#ffe666");break;case "orange":returnArray.push("#cc451b","#e54e1e","#FF5722","#ff6738","#ff784e");break;case "brown":returnArray.push("#604439","#6c4c40","#795548","#86665a","#93766c");break;case "pink":returnArray.push("#c40045","#dc004e","#F50057","#f61967","#f73278");break;case "gray":returnArray.push("#7e7e7e","#8e8e8e","#9E9E9E","#a7a7a7","#b1b1b1");break;case "white":returnArray.push("#bebebe","#d6d6d6","#EEEEEE","#f6f6f6","#ffffff");break;default:}}
return returnArray}
var setUpCanvasStyles=function(){if(programmableCanvas.getAttribute("outlineStyle")!=null){switch(programmableCanvas.getAttribute("outlineStyle")){case "1":canvasContext.lineWidth=1;break;case "2":canvasContext.lineWidth=0.1;break;case "3":canvasContext.lineWidth=10;break;case "4":canvasContext.lineWidth=100;break;default:canvasContext.lineWidth=1}}else{canvasContext.lineWidth=1}
if(programmableCanvas.getAttribute("triangleHeight")!=null){var size=parseInt(programmableCanvas.getAttribute("triangleHeight"));if(!isNaN(size)){minNodeHeight=height/size;maxNodeHeight=height/size+height/(size+2)}else{minNodeHeight=height/6;maxNodeHeight=height/6+height/8}}else{minNodeHeight=height/6;maxNodeHeight=height/6+height/8}
if(programmableCanvas.getAttribute("triangleWidth")!=null){var size=parseInt(programmableCanvas.getAttribute("triangleWidth"));if(!isNaN(size)){minNodeWidth=width/size;maxNodeWidth=width/size}else{minNodeWidth=width/10;maxNodeWidth=width/10}}else{minNodeWidth=width/10;maxNodeWidth=width/10}
if(programmableCanvas.getAttribute("color")!=null){colorsToUse=splitColorsFromPassedIn(programmableCanvas.getAttribute("color"))}else{colorsToUse=splitColorsFromPassedIn("blue")}
if(colorsToUse.length==0){colorsToUse=splitColorsFromPassedIn("blue")}
if(programmableCanvas.getAttribute("resize")!=null){var resize=('true'==programmableCanvas.getAttribute("resize"));resizeOnResize=resize;if(resizeOnResize){document.getElementsByTagName("BODY")[0].onresize=function(){if(resizeTimer!=null)
clearTimeout(resizeTimer);resizeTimer=setTimeout(function(){clearInterval(animationInterval);setUpResize()},200)}}}else{resizeOnResize=!1}
if(programmableCanvas.getAttribute("animation")!=null){var style=parseInt(programmableCanvas.getAttribute("animation"));if(!isNaN(style)){animationStyle=style;if(style==1){animationSpeed=50}else if(style==2){animationSpeed=1}else if(style==3){animationSpeed=1}else if(style==4){animationSpeed=10;animationColors=splitColorsFromPassedIn("blue")}else if(style==5){animationSpeed=2;animationColors=splitColorsFromPassedIn("blue")}else if(style==6){animationSpeed=2;animationColors=splitColorsFromPassedIn("blue")}}else{animationStyle=0;animationSpeed=50}}else{animationStyle=0;animationSpeed=50}
if(programmableCanvas.getAttribute("animationColors")!=null){animationColors=splitColorsFromPassedIn(programmableCanvas.getAttribute("animationColors"))}else{animationColors=splitColorsFromPassedIn("blue")}
if(animationColors.length==0){animationColors=splitColorsFromPassedIn("blue")}
if(programmableCanvas.getAttribute("animationSpeed")!=null){var speed=parseInt(programmableCanvas.getAttribute("animationSpeed"));if(!isNaN(speed)){animationSpeed=speed}else{animationSpeed=50}}}
var drawTriangles=function(){for(var x=0;x<nodePoints.length;x+=2){for(var y=0;y<maxAllowed;y++){if(x+1<nodePoints.length){canvasContext.globalAlpha=nodePoints[x][y].alpha;canvasContext.strokeStyle=nodePoints[x][y].color;canvasContext.fillStyle=nodePoints[x][y].color;canvasContext.beginPath();canvasContext.moveTo(nodePoints[x][y].x,nodePoints[x][y].y);canvasContext.lineTo(nodePoints[x][y+1].x,nodePoints[x][y+1].y);canvasContext.lineTo(nodePoints[x+1][y].x,nodePoints[x+1][y].y);canvasContext.closePath();canvasContext.fill();canvasContext.stroke();canvasContext.globalAlpha=1}
if(x!=0){canvasContext.globalAlpha=nodePoints[x][y+1].alpha;canvasContext.strokeStyle=nodePoints[x][y+1].color;canvasContext.fillStyle=nodePoints[x][y+1].color;canvasContext.beginPath();canvasContext.moveTo(nodePoints[x][y].x,nodePoints[x][y].y);canvasContext.lineTo(nodePoints[x][y+1].x,nodePoints[x][y+1].y);canvasContext.lineTo(nodePoints[x-1][y].x,nodePoints[x-1][y].y);canvasContext.closePath();canvasContext.fill();canvasContext.stroke();canvasContext.globalAlpha=1}}}
for(var x=1;x<nodePoints.length;x+=2){for(var y=0;y<maxAllowed-1;y++){canvasContext.globalAlpha=nodePoints[x][y].alpha;canvasContext.strokeStyle=nodePoints[x][y].color;canvasContext.fillStyle=nodePoints[x][y].color;canvasContext.beginPath();canvasContext.moveTo(nodePoints[x][y].x,nodePoints[x][y].y);canvasContext.lineTo(nodePoints[x][y+1].x,nodePoints[x][y+1].y);canvasContext.lineTo(nodePoints[x-1][y+1].x,nodePoints[x-1][y+1].y);canvasContext.closePath();canvasContext.fill();canvasContext.stroke();canvasContext.globalAlpha=1;if(x+1<nodePoints.length){canvasContext.globalAlpha=nodePoints[x][y+1].alpha;canvasContext.strokeStyle=nodePoints[x][y+1].color;canvasContext.fillStyle=nodePoints[x][y+1].color;canvasContext.beginPath();canvasContext.moveTo(nodePoints[x][y].x,nodePoints[x][y].y);canvasContext.lineTo(nodePoints[x][y+1].x,nodePoints[x][y+1].y);canvasContext.lineTo(nodePoints[x+1][y+1].x,nodePoints[x+1][y+1].y);canvasContext.closePath();canvasContext.fill();canvasContext.stroke();canvasContext.globalAlpha=1}}}}
var AnimationMoveRandom=function(){if(!hasStarted){goToAmountX=Random(-75,75);goToAmountY=Random(-75,75);hasStarted=!0}
if(currentAmountX==goToAmountX){goToAmountX=Random(-75,75)}
if(currentAmountY==goToAmountY){goToAmountY=Random(-75,75)}
if(currentAmountX>goToAmountX){currentAmountX-=0.5}else{currentAmountX+=0.5}
if(currentAmountY>goToAmountY){currentAmountY-=0.5}else{currentAmountY+=0.5}
for(var x=0;x<nodePoints.length;x++){for(var y=0;y<nodePoints[x].length;y++){if(currentAmountX>goToAmountX){nodePoints[x][y].x-=0.5}else{nodePoints[x][y].x+=0.5}
if(currentAmountY>goToAmountY){nodePoints[x][y].y-=0.5}else{nodePoints[x][y].y+=0.5}}}}
var AnimationMoveWave=function(){if(currentWaveMain>width+maxNodeWidth*2&&nodeModifiedCount>=nodeCount){currentWaveMain=maxNodeWidth*-1.5;nodeModifiedCount=1}
for(var x=0;x<nodePoints.length;x++){for(var y=0;y<nodePoints[x].length;y++){if(nodePoints[x][y].animating){if(nodePoints[x][y].anim==0){if(Math.round(nodePoints[x][y].animCount*10)/10<maxPeak){nodePoints[x][y].anim=1}else{nodePoints[x][y].y-=speed;nodePoints[x][y].animCount-=speed}}else if(nodePoints[x][y].anim==1){if(Math.round(nodePoints[x][y].animCount*10)/10>0){nodePoints[x][y].anim=2}else{nodePoints[x][y].y+=speed;nodePoints[x][y].animCount+=speed}}else{nodePoints[x][y].animating=!1;nodePoints[x][y].animCount=0;nodePoints[x][y].anim=0;nodeModifiedCount+=1}}else if(Math.floor(nodePoints[x][y].x)==Math.floor(currentWaveMain)){nodePoints[x][y].animating=!0}}}
currentWaveMain+=1}
var AnimationMoveWaveWithColorChange=function(){if(currentWaveMain>width+maxNodeWidth*2&&nodeModifiedCount>=nodeCount){currentWaveMain=maxNodeWidth*-1.5;if(currentColor==0){currentColor=1}else{currentColor=0}
nodeModifiedCount=1}
for(var x=0;x<nodePoints.length;x++){for(var y=0;y<nodePoints[x].length;y++){if(nodePoints[x][y].animating){if(nodePoints[x][y].anim==0){if(Math.round(nodePoints[x][y].animCount*10)/10<maxPeak){nodePoints[x][y].anim=1}else{nodePoints[x][y].y-=speed;nodePoints[x][y].animCount-=speed}}else if(nodePoints[x][y].anim==1||nodePoints[x][y].anim==2){if(Math.round(nodePoints[x][y].animCount*10)/10>0){nodePoints[x][y].anim=3}else{nodePoints[x][y].y+=speed;nodePoints[x][y].animCount+=speed}}else{if(currentColor==0){nodePoints[x][y].color=animationColors[Random(0,animationColors.length)]}else{nodePoints[x][y].color=colorsToUse[Random(0,colorsToUse.length)]}
nodePoints[x][y].animating=!1;nodePoints[x][y].animCount=0;nodePoints[x][y].anim=0;nodeModifiedCount+=1}}else if(Math.round(nodePoints[x][y].x)==Math.round(currentWaveMain)){nodePoints[x][y].animating=!0}}}
currentWaveMain+=0.9}
var AnimationColorChange=function(){if(currentWaveMain>width+maxNodeWidth*2&&nodeModifiedCount>=nodeCount){currentWaveMain=maxNodeWidth*-1.5;if(currentColor==0){currentColor=1}else{currentColor=0}
nodeModifiedCount=1}
for(var x=0;x<nodePoints.length;x++){for(var y=0;y<nodePoints[x].length;y++){if(nodePoints[x][y].animating){if(nodePoints[x][y].anim==0){nodePoints[x][y].alpha-=0.0125;nodePoints[x][y].animCount+=1;if(nodePoints[x][y].animCount>=80){nodePoints[x][y].anim=1;nodePoints[x][y].alpha=0;nodePoints[x][y].animCount=0}}else if(nodePoints[x][y].anim==1||nodePoints[x][y].anim==2){if(nodePoints[x][y].anim==1){nodePoints[x][y].anim=2
if(currentColor==0){nodePoints[x][y].color=animationColors[Random(0,animationColors.length)]}else{nodePoints[x][y].color=colorsToUse[Random(0,colorsToUse.length)]}}
nodePoints[x][y].alpha+=0.0125;nodePoints[x][y].animCount+=1;if(nodePoints[x][y].animCount>=80){nodePoints[x][y].anim=3;nodePoints[x][y].alpha=1;nodePoints[x][y].animCount=0}}else{nodePoints[x][y].animating=!1;nodeModifiedCount+=1}}else if(Math.round(nodePoints[x][y].x)==Math.round(currentWaveMain)){nodePoints[x][y].alpha=1;nodePoints[x][y].anim=0;nodePoints[x][y].animating=!0;nodePoints[x][y].animCount=0}}}
currentWaveMain+=0.9}
var AnimationColorChangeWave=function(){if(currentWaveMain>width+maxNodeWidth*2&&nodeModifiedCount>=nodeCount){currentWaveMain=maxNodeWidth*-1.5;if(currentColor==0){currentColor=1}else{currentColor=0}
nodeModifiedCount=1}
for(var x=0;x<nodePoints.length;x++){for(var y=0;y<nodePoints[x].length;y++){if(nodePoints[x][y].animating){if(nodePoints[x][y].anim==0){if(Math.round(nodePoints[x][y].animCount*10)/10<maxPeak){nodePoints[x][y].anim=1}else{nodePoints[x][y].y-=speed;nodePoints[x][y].animCount-=speed}}else if(nodePoints[x][y].anim==1||nodePoints[x][y].anim==2){if(Math.round(nodePoints[x][y].animCount*10)/10>0){nodePoints[x][y].anim=3}else{nodePoints[x][y].y+=speed;nodePoints[x][y].animCount+=speed;if(nodePoints[x][y].animCount2<=80&&nodePoints[x][y].alpha!=0&&nodePoints[x][y].anim2==0){if(nodePoints[x][y].alpha<=0){nodePoints[x][y].alpha=0}
nodePoints[x][y].alpha-=0.0125;nodePoints[x][y].animCount2+=1}else{if(nodePoints[x][y].anim2==0){if(currentColor==0){nodePoints[x][y].color=animationColors[Random(0,animationColors.length)]}else{nodePoints[x][y].color=colorsToUse[Random(0,colorsToUse.length)]}
nodePoints[x][y].alpha=0;nodePoints[x][y].animCount2=0;nodePoints[x][y].anim2=1}}}}else{nodePoints[x][y].animating=!1;nodePoints[x][y].animCount=0;nodePoints[x][y].anim=0;nodePoints[x][y].anim2=0;nodeModifiedCount+=1}
if(nodePoints[x][y].anim2==1){nodePoints[x][y].alpha+=0.0125;nodePoints[x][y].animCount2+=1;if(nodePoints[x][y].alpha>=1||nodePoints[x][y].animCount2<=80){nodePoints[x][y].alpha=1;nodePoints[x][y].animCount2=0;nodePoints[x][y].anim2=2}}}else if(Math.round(nodePoints[x][y].x)==Math.round(currentWaveMain)){nodePoints[x][y].animating=!0;nodePoints[x][y].alpha=1;nodePoints[x][y].animCount2=0;nodePoints[x][y].anim2=0}}}
currentWaveMain+=0.9}
var AnimationColorChangeWaveNoFade=function(){if(currentWaveMain>width+maxNodeWidth*2&&nodeModifiedCount>=nodeCount){currentWaveMain=maxNodeWidth*-1.5;if(currentColor==0){currentColor=1}else{currentColor=0}
nodeModifiedCount=1}
for(var x=0;x<nodePoints.length;x++){for(var y=0;y<nodePoints[x].length;y++){if(nodePoints[x][y].animating){if(nodePoints[x][y].anim==0){if(Math.round(nodePoints[x][y].animCount*10)/10<maxPeak){nodePoints[x][y].anim=1}else{nodePoints[x][y].y-=speed;nodePoints[x][y].animCount-=speed}}else if(nodePoints[x][y].anim==1||nodePoints[x][y].anim==2){if(nodePoints[x][y].anim==1){if(currentColor==0){nodePoints[x][y].color=animationColors[Random(0,animationColors.length)]}else{nodePoints[x][y].color=colorsToUse[Random(0,colorsToUse.length)]}
nodePoints[x][y].anim=2}
if(Math.round(nodePoints[x][y].animCount*10)/10>0){nodePoints[x][y].anim=3}else{nodePoints[x][y].y+=speed;nodePoints[x][y].animCount+=speed}}else{nodePoints[x][y].animating=!1;nodePoints[x][y].animCount=0;nodePoints[x][y].anim=0;nodeModifiedCount+=1}}else if(Math.round(nodePoints[x][y].x)==Math.round(currentWaveMain)){nodePoints[x][y].animating=!0;nodePoints[x][y].anim=0}}}
currentWaveMain+=0.9}
var setUpNodePoints=function(){var currentX=maxNodeWidth*-1;var currentY=maxNodeWidth*-2;var cPoint=0;var looping=!0;var count=0;var maxOffset=height/8;nodePoints[cPoint]=[];nodePoints[cPoint].push([currentX,currentY-Random(maxOffset*-1,maxOffset)]);while(looping){if(currentX>width+maxNodeWidth||(cPoint>0&&count>=maxAllowed)){if(cPoint%2==0){if(count+1==maxAllowed){nodePoints[cPoint].push(new Node(nodePoints[0][maxAllowed-1][0],nodePoints[0][maxAllowed-1][1],colorsToUse[Random(0,colorsToUse.length)]))}
currentX=maxNodeWidth*-1}else{currentX=maxNodeWidth*-1.5}
count=0;var inc=Random(minNodeHeight,maxNodeHeight);currentY+=inc;if(currentY>height+maxNodeHeight*2){looping=!1}else{cPoint+=1;nodePoints.push([]);nodePoints[cPoint].push(new Node(currentX,currentY-Random(maxOffset*-1,maxOffset),colorsToUse[Random(0,colorsToUse.length)]))}}
else{if(cPoint==0){maxAllowed+=1}
count+=1;if(cPoint%2!=0&&count>=maxAllowed){currentX=width+maxNodeWidth/2}else{currentX+=Random(minNodeWidth,maxNodeWidth);nodePoints[cPoint].push(new Node(currentX,currentY-Random(maxOffset*-1,maxOffset),colorsToUse[Random(0,colorsToUse.length)]))}}}
drawTriangles();nodeCount=0;for(var x=0;x<nodePoints.length;x++){nodeCount+=nodePoints[x].length}
currentWaveMain=maxNodeWidth*-1.5;allowNext=!0;maxPeak=height/6*-1,minPeak=height/18;if(animationStyle>0&&animationStyle<7){animationInterval=setInterval(function(){if(animationStyle==1){AnimationMoveRandom()}else if(animationStyle==2){AnimationMoveWave()}else if(animationStyle==3){AnimationMoveWaveWithColorChange()}else if(animationStyle==4){AnimationColorChange()}else if(animationStyle==5){AnimationColorChangeWave()}else if(animationStyle==6){AnimationColorChangeWaveNoFade()}
canvasContext.clearRect(0,0,programmableCanvas.width,programmableCanvas.height);drawTriangles()},animationSpeed)}}
var SetUpCanvas=function(){programmableCanvas=document.getElementById(id);canvasContext=programmableCanvas.getContext("2d");if(programmableCanvas.getAttribute("quality")!=null){var style=programmableCanvas.getAttribute("quality");switch(style){case "low":height=programmableCanvas.parentNode.scrollHeight/4;width=programmableCanvas.parentNode.scrollWidth/4;break;case "med":height=programmableCanvas.parentNode.scrollHeight/2;width=programmableCanvas.parentNode.scrollWidth/2;break;case "high":height=programmableCanvas.parentNode.scrollHeight;width=programmableCanvas.parentNode.scrollWidth;break;case "ultra":height=programmableCanvas.parentNode.scrollHeight*2;width=programmableCanvas.parentNode.scrollWidth*2;break;default:height=programmableCanvas.parentNode.scrollHeight;width=programmableCanvas.parentNode.scrollWidth;break}}else{height=programmableCanvas.parentNode.scrollHeight;width=programmableCanvas.parentNode.scrollWidth}
programmableCanvas.style.width='100%';programmableCanvas.style.height='100%';programmableCanvas.width=width;programmableCanvas.height=height;setUpCanvasStyles();setUpNodePoints()}
var setUpResize=function(){if(programmableCanvas.getAttribute("quality")!=null){var style=programmableCanvas.getAttribute("quality");switch(style){case "low":height=programmableCanvas.parentNode.scrollHeight/4;width=programmableCanvas.parentNode.scrollWidth/4;break;case "med":height=programmableCanvas.parentNode.scrollHeight/2;width=programmableCanvas.parentNode.scrollWidth/2;break;case "high":height=programmableCanvas.parentNode.scrollHeight;width=programmableCanvas.parentNode.scrollWidth;break;case "ultra":height=programmableCanvas.parentNode.scrollHeight*2;width=programmableCanvas.parentNode.scrollWidth*2;break;default:height=programmableCanvas.parentNode.scrollHeight;width=programmableCanvas.parentNode.scrollWidth;break}}else{height=programmableCanvas.parentNode.scrollHeight;width=programmableCanvas.parentNode.scrollWidth}
programmableCanvas.style.width='100%';programmableCanvas.style.height='100%';programmableCanvas.width=width;programmableCanvas.height=height;nodePoints=[];maxAllowed=0;currentColor=0;setUpNodePoints()}
SetUpCanvas()}
